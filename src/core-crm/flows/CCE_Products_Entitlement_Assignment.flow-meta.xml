<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>52.0</apiVersion>
    <decisions>
        <description>Verify if the Account has been enabled as partner and buyer</description>
        <name>Account_is_Enabled</name>
        <label>Account is Enabled</label>
        <locationX>774</locationX>
        <locationY>1254</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_Enabled</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Buyer_Account.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Buyer_Group_Member</targetReference>
            </connector>
            <label>Is Enabled</label>
        </rules>
    </decisions>
    <decisions>
        <description>Verifies the ProductId is Null in the Commerce Entitlement Product</description>
        <name>Checks_if_Product_Id_is_Null</name>
        <label>Checks if Product Id is Null</label>
        <locationX>645</locationX>
        <locationY>1987</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Check_ProductId_Null</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Get_Entitlement_Product.ProductId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Product_assignment_to_an_entitlement</targetReference>
            </connector>
            <label>Check ProductId Null</label>
        </rules>
        <rules>
            <name>Check_if_Product_is_OPE</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Family</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>OPE</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Entitlement_Product_to_Delete</targetReference>
            </connector>
            <label>Check if Product is OPE</label>
        </rules>
    </decisions>
    <decisions>
        <name>Product_Family_Null</name>
        <label>Product Family Null</label>
        <locationX>584</locationX>
        <locationY>383</locationY>
        <defaultConnector>
            <targetReference>Get_Course</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Family</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>When a product is created during Product request release stage, it should be assign to the right entitlement created for the corporate Account.</description>
    <interviewLabel>CCE Products Entitlement Assignment {!$Flow.CurrentDateTime}</interviewLabel>
    <label>CCE Products Entitlement Assignment</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Product_assignment_to_an_entitlement</name>
        <label>Product assignment to an entitlement</label>
        <locationX>503</locationX>
        <locationY>2115</locationY>
        <inputAssignments>
            <field>PolicyId</field>
            <value>
                <elementReference>Get_Entitlement.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ProductId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>CommerceEntitlementProduct</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordDeletes>
        <description>Remove Product to the Entitlement once the product family has been changed to OPE.</description>
        <name>Remove_Product_to_Entitlement</name>
        <label>Remove Product to Entitlement</label>
        <locationX>798</locationX>
        <locationY>2296</locationY>
        <inputReference>Get_Entitlement_Product_to_Delete</inputReference>
    </recordDeletes>
    <recordLookups>
        <description>Get the Account of the Opportunity</description>
        <name>Get_Account</name>
        <label>Get Account</label>
        <locationX>781</locationX>
        <locationY>983</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Buyer_Account</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Opportunity.Account.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Buyer_Account</name>
        <label>Get Buyer Account</label>
        <locationX>782</locationX>
        <locationY>1103</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Account_is_Enabled</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>BuyerId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Account.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>BuyerAccount</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Get the the Entitlement Policy of the Buyer Group</description>
        <name>Get_Buyer_Group_Entitlement_Policy</name>
        <label>Get Buyer Group Entitlement Policy</label>
        <locationX>650</locationX>
        <locationY>1583</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Entitlement</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>BuyerGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Buyer_Group_of_Account.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CommerceEntitlementBuyerGroup</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Get the buyer group of the account</description>
        <name>Get_Buyer_Group_Member</name>
        <label>Get Buyer Group Member</label>
        <locationX>649</locationX>
        <locationY>1305</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Buyer_Group_of_Account</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>BuyerId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Account.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>BuyerGroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Buyer_Group_of_Account</name>
        <label>Get Buyer Group of Account</label>
        <locationX>650</locationX>
        <locationY>1463</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Buyer_Group_Entitlement_Policy</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Buyer_Group_Member.BuyerGroup.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>BuyerGroup</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Get the course Id of the  product</description>
        <name>Get_Course</name>
        <label>Get Course</label>
        <locationX>782</locationX>
        <locationY>503</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Product_Request</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Course__r.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>hed__Course__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Get the Entitlement of the Buyer Group</description>
        <name>Get_Entitlement</name>
        <label>Get Entitlement</label>
        <locationX>650</locationX>
        <locationY>1703</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Entitlement_Product</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Buyer_Group_Entitlement_Policy.Policy.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CommerceEntitlementPolicy</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the product assigned in the Entitlement</description>
        <name>Get_Entitlement_Product</name>
        <label>Get Entitlement Product</label>
        <locationX>652</locationX>
        <locationY>1831</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Checks_if_Product_Id_is_Null</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ProductId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CommerceEntitlementProduct</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the Entitlement Product to Delete once the Product Family is changed to OPE</description>
        <name>Get_Entitlement_Product_to_Delete</name>
        <label>Get Entitlement Product to Delete</label>
        <locationX>801</locationX>
        <locationY>2127</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Remove_Product_to_Entitlement</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ProductId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CommerceEntitlementProduct</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Get the opportunity of the product specification</description>
        <name>Get_Opportunity</name>
        <label>Get Opportunity</label>
        <locationX>782</locationX>
        <locationY>863</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Account</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Product_Specification.Opportunity_Name__r.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Opportunity</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Get the product request of the course</description>
        <name>Get_Product_Request</name>
        <label>Get Product Request</label>
        <locationX>782</locationX>
        <locationY>623</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Product_Specification</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Course.ProductRequestID__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Product_Request__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Get the product specification based of the product request</description>
        <name>Get_Product_Specification</name>
        <label>Get Product Specification</label>
        <locationX>782</locationX>
        <locationY>743</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Opportunity</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Product_Request.Product_Specification__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Product_Specification__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>466</locationX>
        <locationY>79</locationY>
        <connector>
            <targetReference>Product_Family_Null</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Family</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Product2</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <description>Product Family is set to None</description>
        <name>None</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>None</stringValue>
        </value>
    </variables>
</Flow>
